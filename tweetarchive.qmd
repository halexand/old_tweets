---
title: "My tweets from 2015-24"
author: "Wolfgang Huber"
date: "`r date()`"
format:
  html:
    embed-resources: false
    page-layout: full
    toc: false
    css: tweetarchive.css
---
```{r}
#| label: pkgs
#| message: false
library("jsonlite")
library("dplyr")
library("stringr")
library("kableExtra")
```

The file data/tweets.js is in the Twitter archive (zip file) that I downloaded from X. Adapt path to whatever you have.

```{r}
#| label: fromjson
#| cache: true
#| warning: false
archivepath = "/Users/whuber/twitter/data" 
tweets = 
  readLines(file.path(archivepath, "tweets.js")) |>
    sub("^window.YTD.tweets.part0 = ", "", x = _) |>
    fromJSON(flatten = TRUE) 
```

Remove retweets and select relevant columns

```{r}
#| label: noRT
isrt = grepl("^RT", tweets$tweet.full_text)
table(isrt)
out = dplyr::select(tweets[!isrt, ], all_of(c(
  date = "tweet.created_at", 
  text = "tweet.full_text", 
  id = "tweet.id", 
  mediadf = "tweet.entities.media")))
```

Some cleanup and prettification. The `gsub` deals with linefeed (\\n) characters, and we add hyperlinks to URLs 

```{r}
#| label: prettify
out = mutate(out, 
    text = gsub("\\n", "<br>", text) |>
           str_replace_all("(https?://\\S+)", "<a href='\\1'>\\1</a>"),
    idhtml = sprintf('<a href="https://x.com/wolfgangkhuber/status/%s">%s</a>', id, id),
    date = strptime(out$date, "%a %b %d %H:%M:%S %z %Y", tz = "UTC")
) |>
  arrange(date)
```

Deal with media
```{r}
#| label: media
indir  = file.path(archivepath, "tweets_media")
outdir = "media"
mediafiles = dir(indir)
out$media = character(nrow(out))

if (file.exists(outdir))
     unlink(outdir, recursive = TRUE)
dir.create(outdir)

for (i in seq_len(nrow(out))) {
  m = out$mediadf[[i]]
  if (!is.null(m)) {
    stopifnot(is.data.frame(m), nrow(m) == 1)
    key = tools::file_path_sans_ext(basename(m$media_url))
    im = grep(key, mediafiles)
    ip = grep(paste0("^", out$id[i]), mediafiles)
    if (length(ip) == 0) {
      message(sprintf("%s from tweet #%d not found",  key, i))
    } else {
      stopifnot(im %in% ip)
      file.copy(file.path(indir, mediafiles[ip]), outdir)
      out$media[i] = paste(
        "::: {.tweet-media}",
        paste(sprintf('![](%s){.lightbox .resized-image}', file.path(outdir, mediafiles[ip])), collapse = "\n"),
        ":::", sep = "\n") 
    }
  }
}
```


```{r}
#| label: tweets
#| output: "asis"
tweets = with(out, sprintf(
'::: {.tweet}
::: {.tweet-header}
<span class="tweet-timestamp">%s</span>
<span class="tweet-handle">%s</span>
:::  
::: {.tweet-content}
%s
:::  
%s
:::
', as.character(date), idhtml, text, media
))
cat(tweets, "\n", sep = "")
```

