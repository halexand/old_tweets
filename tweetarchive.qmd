---
title: "My tweets from 2015-24"
author: "Wolfgang Huber"
date: "`r date()`"
format:
  html:
    embed-resources: false
    page-layout: full
    toc: false
    css: tweetarchive.css
---
```{r}
#| label: pkgs
#| message: false
library("jsonlite")
library("dplyr")
library("stringr")
library("kableExtra")
```

The file data/tweets.js is in the Twitter archive (zip file) that I downloaded from X. Adapt path to whatever you have.

```{r}
#| label: fromjson
#| cache: true
#| warning: false
archivepath = "/Users/whuber/twitter/data" 
tweets = 
  readLines(file.path(archivepath, "tweets.js")) |>
    sub("^window.YTD.tweets.part0 = ", "", x = _) |>
    fromJSON(flatten = TRUE) 
```

Remove retweets and select relevant columns

```{r}
#| label: noRT
isrt = grepl("^RT", tweets$tweet.full_text)
table(isrt)
out = dplyr::select(tweets[!isrt, ], all_of(c(date = "tweet.created_at", text = "tweet.full_text", id = "tweet.id", mediadf = "tweet.entities.media")))
```

Some cleanup and prettification. The `gsub` deals with linefeed (\\n) characters, and we add hyperlinks to URLs 

```{r}
#| label: prettify
out = mutate(out, 
    text = gsub("\\n", "<br>", text) |>
           str_replace_all("(https?://\\S+)", "<a href='\\1'>\\1</a>"),
    id = sprintf('<a href="https://x.com/wolfgangkhuber/status/%s">%s</a>', id, id),
    date = strptime(out$date, "%a %b %d %H:%M:%S %z %Y", tz = "UTC")
)
```

Deal with media
```{r}
#| label: media
mediafiles = dir(file.path(archivepath, "tweets_media"))
out$media = character(nrow(out))
for (i in seq_len(nrow(out))) {
  m = out$mediadf[[i]]
  if (!is.null(m)) {
    stopifnot(is.data.frame(m), nrow(m) == 1)
    key = tools::file_path_sans_ext(basename(m$media_url))
    w = grep(key, mediafiles)
    if (length(w) == 0) {
      message(sprintf("%s from tweet #%d not found",  key, i))
    } else {
      stopifnot(length(w) == 1)
      browser()
    }
  }
}
```

::: {.tweet-media}
    <img src="photo1.jpg" alt="Photo 1">
    <img src="photo2.jpg" alt="Photo 2">
    <img src="photo3.jpg" alt="Photo 3">
::: 

```{r}
#| label: tweets
#| output: "asis"
out = out[1:2, ]
tweets = sprintf(
'::: {.tweet}
::: {.tweet-header}
<span class="tweet-timestamp">%s</span>
<span class="tweet-handle">%s</span>
:::  
::: {.tweet-content}
%s
:::  
%s
:::
', as.character(out$date), out$id, out$text, out$media
)
cat(tweets, "\n", sep = "")
```

```{r}
#| label: createHTML
#| eval: false
kable(select(out, !mediadf)[1:100,], row.names = FALSE) 
```